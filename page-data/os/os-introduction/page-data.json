{"componentChunkName":"component---src-templates-blog-post-js","path":"/os/os-introduction/","result":{"data":{"site":{"siteMetadata":{"title":"Jaehyeon's Dev Blog","author":"Jaehyeon Kim","siteUrl":"https://jaehyeon48.github.io","comment":{"disqusShortName":"","utterances":"jaehyeon48/blog-comments"}}},"markdownRemark":{"id":"2974b331-c154-5e4a-b855-5d2fd9d9e314","excerpt":"운영 체제란 무엇인가 운영 체제 (Operating System)란, 쉽게 말해 컴퓨터의 하드웨어를 관리하는 소프트웨어라고 할 수 있습니다. 즉, 우리가 일상 생활에서 많이 사용하는 브라우저, 엑셀, 워드 같은 애플리케이션 프로그램들이 컴퓨터 하드웨어 위에서 원활히 동작할 수 있도록 일종의 중간 계층 역할을 하는 프로그램이라고 할 수 있습니다. 데스크톱, 노트북뿐만 아니라 스마트폰, 심지어 자동차, IoT 기기를 포함하는 모든 가전제품에도 OS…","html":"<h2 id=\"운영-체제란-무엇인가\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81-%EC%B2%B4%EC%A0%9C%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"운영 체제란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>운영 체제란 무엇인가</h2>\n<p><strong>운영 체제 (Operating System)</strong>란, 쉽게 말해 <em>컴퓨터의 하드웨어를 관리하는</em> 소프트웨어라고 할 수 있습니다. 즉, 우리가 일상 생활에서 많이 사용하는 브라우저, 엑셀, 워드 같은 애플리케이션 프로그램들이 컴퓨터 하드웨어 위에서 원활히 동작할 수 있도록 일종의 중간 계층 역할을 하는 프로그램이라고 할 수 있습니다. 데스크톱, 노트북뿐만 아니라 스마트폰, 심지어 자동차, IoT 기기를 포함하는 모든 가전제품에도 OS가 존재합니다.</p>\n<p>운영 체제의 역할을 좀 더 살펴보려면 우선 CPU, 메모리, 입/출력장치 등과 같은 컴퓨터 하드웨어에 대한 이해가 필요한데, 그림 1-1에 컴퓨터의 주요 부품들에 대한 큰 그림이 나와 있습니다. 여기서, 하드웨어는 맨 밑에 자리하고 있는데, 앞서 말한 CPU, 메모리, 디스크 및 키보드, 모니터 등과 같은 입/출력장치가 여기에 속합니다. 하드웨어 위에는 소프트웨어가 위치하고 있습니다.</p>\n<p>대부분의 컴퓨터에는 두 개의 동작 모드가 존재하는데, 하나는 <strong>커널(kernel)모드</strong> 이고, 다른 하나는 <strong>유저 모드</strong> 입니다. 커널 모드에서는 모든 하드웨어에 대해 완전한 접근을 할 수 있고, 또 컴퓨터가 수행할 수 있는 모든 종류의 명령을 수행할 수 있습니다. 운영 체제는 바로 이 커널 모드로 동작합니다. 그 외 나머지 소프트웨어들은 유저 모드에서 동작하는데, 유저 모드에서는 일부분의 명령만을 수행할 수 있습니다. 특히, 유저모드에서는 하드웨어를 조작하거나 I/O에 관한 동작을 수행할 수 없습니다.</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/os/os_fig_11.png\" alt=\"OS는 어느 계층에 속하는가\">\n    <figcaption>그림 1-1. 출처: Modern Operating Systems (4th Edition)</figcaption>\n</figure>\n<p>또, <strong>shell</strong> 혹은 <strong>GUI</strong>라고 불리는 유저 인터페이스 프로그램은 소프트웨어 레벨 중에서 맨 아랫단에 위치합니다. 이 프로그램들은 사용자로 하여금 웹 브라우저, 워드 프로세서 등과 같은 다른 프로그램을 실행할 수 있도록 도와줍니다. 유저 인터페이스 프로그램들 또한 운영 체제를 많이 사용합니다.</p>\n<p>종합해 보면, 위 그림에서 보듯이 운영 체제는 모든 소프트웨어에 대한 기초를 제공해 줌으로써 유저 프로그램들이 잘 동작하게끔 해줍니다.</p>\n<table>\n<thead>\n<tr>\n<th>📌 운영 체제를 공부해야 하는 이유?</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>실제로 운영 체제를 개발하는 사람은 극소수일 텐데, 왜 우리가 직접 개발할 것도 아니고 유지보수할 것도 아니면서 운영 체제를 배워야 하는 걸까요? 정말 단순하게 생각해보면, 대부분의 프로그램이 운영 체제 위에서 동작하기 때문입니다. 이 때문에 적어도 운영 체제의 동작 원리 정도는 알아야 더 효율적이고 효과적인 프로그램을 개발할 수 있을 것입니다. 따라서 운영 체제의 기초 및 운영 체제가 하드웨어를 제어하는 방법, 그리고 운영 체제가 어떠한 기능들을 사용자(개발자)에게 제공하는지를 아는 것은 운영 체제를 직접 개발하고 유지보수하는 사람들뿐만 아니라 일반적인 애플리케이션을 만드는 개발자에게도 중요하다고 할 수 있습니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"컴퓨터-시스템-구성\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%EC%84%B1\" aria-label=\"컴퓨터 시스템 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>컴퓨터 시스템 구성</h2>\n<p>현대 컴퓨터들은 대부분 하나 이상의 CPU(혹은 코어)들과 <strong>버스(bus)</strong>로 연결된 여러 개의 <strong>장치 컨트롤러(device controller)</strong>들로 구성되어 있고, 각 장치 컨트롤러들은 이름 그대로 장치들(예를 들어 디스크 드라이브, 오디오/비디오 장치, 입/출력 장치)을 관리합니다. USB와 같이, 장치 컨트롤러에 따라 하나의 컨트롤러에 하나 이상의 하드웨어가 연결될 수도 있습니다. 장치 컨트롤러는 일종의 “칩”으로서 <em>물리적</em>으로 장치들을 관리합니다. 내부에 자체적으로 버퍼를 두고, 특별한 역할을 하는 레지스터를 두고 있으며, 데이터들을 버퍼에서 꺼내 다른 주변 장치들과 주고받는 역할을 합니다. 대부분 이러한 장치들을 제어 하는 것이 매우 복잡하므로, 장치 컨트롤러는 운영 체제에게 좀 더 간편화된(그럼에도 복잡하지만..!) 인터페이스를 제공합니다.</p>\n<p>운영 체제는 이러한 장치 컨트롤러들에게 명령을 내리고 그 결과를 받아서 처리하는 <strong>장치 드라이버(device driver)</strong>라는 것을 가지고 있습니다. 장치 드라이버를 사용하기 위해선 장치 드라이버들이 운영 체제 내부에 위치하여 커널 모드로 동작해야 합니다. 현대의 운영 체제(리눅스, 윈도우 등)들은 드라이버들이 커널 밖에서도 동작할 수 있도록 하지만, 여전히 대부분의 드라이버들은 커널 영역 안에서 작동합니다.</p>\n<p>아래 그림 1-2는 일반적인 컴퓨터 시스템의 구조를 나타내고 있습니다:</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/os/os_fig_12.png\" alt=\"일반적인 컴퓨터 시스템 구조\">\n    <figcaption>그림 1-2. 출처: Operating System Concepts (10th Edition)</figcaption>\n</figure>\n<h2 id=\"자원-관리자로서의-운영-체제\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%9B%90-%EA%B4%80%EB%A6%AC%EC%9E%90%EB%A1%9C%EC%84%9C%EC%9D%98-%EC%9A%B4%EC%98%81-%EC%B2%B4%EC%A0%9C\" aria-label=\"자원 관리자로서의 운영 체제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>자원 관리자로서의 운영 체제</h2>\n<p>앞서 살펴본 것처럼, 프로그램에게 하드웨어의 추상화를 제공하는 관점은 top-down 관점입니다. 반대로, bottom-up 관점에서 보자면 운영 체제는 복잡한 시스템의 모든 부분을 관리한다고 볼 수 있습니다. 현대 컴퓨터들은 CPU, 메모리, 디스크, I/O 장치, 그 외 여러 다양한 장치들로 구성되어 있다고 했는데, 이러한 장치들을 사용하고자 하는 여러 프로그램들에게 하드웨어 자원들을 정돈되고 세심한 방식으로 제공하는 것이 운영 체제의 역할입니다.</p>\n<p>현대 운영 체제들은 여러 프로그램이 메모리에 상주하여 <em>동시</em>에 돌아가도록 합니다. 이때 만약 세 개의 프로그램이 각자 자신들의 결과를 프린터에 출력하고자 한다고 해봅시다. 원래라면 1, 2, 3번 프로그램의 결과물이 차례로 출력되어야 하지만, 이들의 순서가 뒤죽박죽되어 출력될 수도 있습니다. 따라서 운영 체제가 어떤 하나의 프로그램이 종료되면 그 결과물이 곧장 프린터로 향하도록 하는 것이 아니라, 해당 결과물을 복사하는 동시에, 다른 프로그램이 계속해서 출력을 만들도록 할 수 있습니다.</p>\n<p>또한, 컴퓨터 (혹은 네트워크)의 사용자가 두 명 이상이라면, 사용자끼리 서로 간섭할 수도 있을 것입니다. 게다가, 하드웨어뿐만 아니라 데이터도 공유해야 하는 상황이 발생할 수 있는데, 이때 운영 체제는 어떤 프로그램(혹은 사용자)이 어떤 자원을 사용하고 있는지 추적하고 자원 접근에 대한 요청을 관리함으로써 서로 다른 유저들의 요청들이 충돌하는 것을 방지하는 역할을 합니다.</p>\n<p>자원 관리는 두 개의 <a href=\"https://en.wikipedia.org/wiki/Multiplexing\" target=\"_blank\" rel=\"noreferrer noopener\">멀티플렉싱</a> 방식을 이용합니다. 하나는 <em>시간</em>에 관한 멀티플렉싱 이고, 다른 하나는 <em>공간</em>에 관한 멀티플렉싱 입니다.</p>\n<p><em>한 자원이 시간에 대해 멀티플렉싱(time multiplexed) 된다는 것은</em>, 서로 다른 프로그램(혹은 사용자)이 돌아가면서 자원을 사용한다는 것을 말합니다. 이들 중 첫 번째가 먼저 자원을 사용하고, 그 다음 두 번째가 자원을 사용하고, 또 세 번째가 사용하고, … 를 반복합니다. 예를 들어, 하나의 프로세서에 대해 여러 개의 프로그램이 CPU 자원을 사용하고자 할 때, 운영 체제는 우선 하나의 프로그램에게 자원을 할당하고, 해당 프로그램이 어느 정도 실행되면 다른 프로그램에게 자원을 할당합니다. 이 자원을 어떻게 시간에 대해 멀티플렉싱 할 것인지, 즉 어떤 프로그램이 얼마나 자원을 사용할 것인가에 대해서 결정하는 것은 운영 체제의 몫입니다.</p>\n<p><em>한 자원이 공간에 대해 멀티플렉싱(space multiplexed) 된다는 것은</em>, 시간에 대해 멀티플렉싱 하는 경우처럼 서로 돌아가면서 자원을 사용하는 것이 아니라, 각각의 프로그램들이 자원의 일부분을 나눠 사용하는 것을 말합니다. 예를 들어, 메인 메모리를 여러 부분으로 나눠 각 프로그램에 할당함으로써 여러 프로그램이 메모리에 동시에 상주하도록 할 수 있습니다. 만약 메모리에 충분한 공간이 있다고 하면, 이 공간들을 적절히 나누어 여러 프로그램을 동시에 상주하도록 하는 것이 한 프로그램에게 몰아주는 것보다 훨씬 효율적일 것입니다. 물론, 자원 배분의 공정성, 보안과 같은 문제들이 발생할 수 있는데 이것 또한 운영 체제가 관리해야 하는 부분입니다.</p>\n<h2 id=\"레퍼런스\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4\" aria-label=\"레퍼런스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>레퍼런스</h2>\n<ul>\n<li><a href=\"https://www.amazon.com/Modern-Operating-Systems-Andrew-Tanenbaum/dp/013359162X\" target=\"_blank\" rel=\"noreferrer noopener\">Modern Operating Systems (4th Edition) - Andrew Tanenbaum, Herbert Bos</a></li>\n<li><a href=\"https://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1119800366/ref=sr_1_1?keywords=operating+system+concepts&#x26;qid=1649684419&#x26;s=books&#x26;sprefix=operating+system%2Cstripbooks-intl-ship%2C348&#x26;sr=1-1\" target=\"_blank\" rel=\"noreferrer noopener\">Operating System Concepts (10th Edition) - Abraham Silberschatz, Greg Gagne, Peter B. Galvin</a></li>\n</ul>","frontmatter":{"title":"운영 체제란?","date":"March 20, 2021","category":"OS"}}},"pageContext":{"slug":"/os/os-introduction/","previous":{"fields":{"slug":"/javascript/browser-event-loop/"},"frontmatter":{"title":"브라우저 환경에서의 이벤트 루프"}},"next":{"fields":{"slug":"/software-architecture/refactoring-summary-1/"},"frontmatter":{"title":"리팩토링 2판 요약 정리 Ch.1"}}}},"staticQueryHashes":[]}