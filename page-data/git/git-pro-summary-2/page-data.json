{"componentChunkName":"component---src-templates-blog-post-js","path":"/git/git-pro-summary-2/","result":{"data":{"site":{"siteMetadata":{"title":"Jaehyeon's Dev Blog","author":"Jaehyeon Kim","siteUrl":"https://jaehyeon48.github.io","comment":{"disqusShortName":"","utterances":"jaehyeon48/blog-comments"}}},"markdownRemark":{"id":"cef19057-1618-5565-8b6f-11382660ea81","excerpt":"원문 1편 Git Repository 생성 일반적으로 Git repository를 생성하는 데에는 크게 두 가지 방법이 존재한다: 아직 VCS로 관리되고 있지 않은 로컬 디렉토리를 Git repository로 변경. 외부의 Git repository를 . 기존에 존재하는 디렉토리를 Git repository로 초기화 우선, CLI를 통해 Git repository…","html":"<p><a href=\"https://git-scm.com/book/en/v2\" target=\"_blank\" rel=\"noreferrer noopener\">원문</a></p>\n<p><a href=\"../git_pro_summary_1\">1편</a></p>\n<hr class=\"custom-hr\">\n<h2 id=\"git-repository-생성\" style=\"position:relative;\"><a href=\"#git-repository-%EC%83%9D%EC%84%B1\" aria-label=\"git repository 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>Git Repository 생성</h2>\n<ul>\n<li>\n<p>일반적으로 Git repository를 생성하는 데에는 크게 두 가지 방법이 존재한다:</p>\n<ol>\n<li>아직 VCS로 관리되고 있지 않은 로컬 디렉토리를 Git repository로 변경.</li>\n<li>외부의 Git repository를 <code class=\"language-text\">clone</code>.</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"기존에-존재하는-디렉토리를-git-repository로-초기화\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4%EC%97%90-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%8A%94-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%EB%A5%BC-git-repository%EB%A1%9C-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"기존에 존재하는 디렉토리를 git repository로 초기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>기존에 존재하는 디렉토리를 Git repository로 초기화</h3>\n<ul>\n<li>우선, CLI를 통해 Git repository로 초기화하고자 하는 디렉토리로 이동하여 다음 명령어를 입력:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git init</code></pre></div>\n<ul>\n<li>위 명령을 입력하면 <code class=\"language-text\">.git</code> 이라는 하위 디렉토리를 생성. 이 하위 디렉토리에는 저장소에 필요한 모든 파일들이 저장됨.</li>\n<li>Git으로 하여금 파일을 관리하도록 하고 싶다면 우선 <code class=\"language-text\">git add</code> 명령어를 통해 파일을 tracking하고, <code class=\"language-text\">git commit</code> 명령어를 통해 파일을 커밋해야함.</li>\n</ul>\n<h3 id=\"cloning-하기\" style=\"position:relative;\"><a href=\"#cloning-%ED%95%98%EA%B8%B0\" aria-label=\"cloning 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>Cloning 하기</h3>\n<ul>\n<li>오픈소스 저장소와 같이 기존에 존재하는 Git repository를 복사하고 싶다면 <code class=\"language-text\">git clone</code> 명령어를 이용.</li>\n<li><code class=\"language-text\">git clone</code>을 사용하게 되면 해당 프로젝트의 히스토리를 “전부” 받아옴.</li>\n<li>저장소를 복제할 땐 <code class=\"language-text\">git clone &lt;url></code>과 같은 방식으로 수행:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ git clone https://github.com/libgit2/libgit2</code></pre></div>\n<ul>\n<li>위 명령을 수행하면 <code class=\"language-text\">libgit2</code>라는 디렉토리를 만들어서, <code class=\"language-text\">.git</code> 하위 디렉토리를 생성하고 저장소의 모든 데이터를 <code class=\"language-text\">.git</code>에 저장한 후 최신 버전을 check out함.</li>\n<li>이 때, 생성되는 디렉토리의 이름을 <code class=\"language-text\">libgit2</code> 대신 다른 이름으로 하고 싶다면 다음과 같이 해야함:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ git clone https://github.com/libgit2/libgit2 mylibgit</code></pre></div>\n<ul>\n<li>위 명령을 수행하면 다른 모든 과정은 동일하지만 새로 생성되는 디렉토리의 이름이 <code class=\"language-text\">mylibgit</code>이 됨.</li>\n<li>위 예시에서는 <code class=\"language-text\">https://</code> 프로토콜을 사용했지만 이외에도 <code class=\"language-text\">git://</code>과 같이 다양한 프로토콜을 사용할 수도 있음.</li>\n</ul>\n<h2 id=\"저장소에-변경사항-기록하기\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EB%B3%80%EA%B2%BD%EC%82%AC%ED%95%AD-%EA%B8%B0%EB%A1%9D%ED%95%98%EA%B8%B0\" aria-label=\"저장소에 변경사항 기록하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" width=\"18\" height=\"18\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"#05b166\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>저장소에 변경사항 기록하기</h2>\n<ul>\n<li>현재 워킹 디렉토리에 있는 각 파일들은 <code class=\"language-text\">tracked</code>(관리대상) 상태이거나, 혹은 <code class=\"language-text\">untracked</code>(관리대상이 아님) 상태이다.</li>\n<li><code class=\"language-text\">tracked</code> 파일은 이미 이전 스냅샷에 포함된 파일이며, <code class=\"language-text\">unmodified</code>, <code class=\"language-text\">modified</code>, <code class=\"language-text\">staged</code> 중 하나의 상태이다.</li>\n<li>이외의 파일은 모두 <code class=\"language-text\">untracked</code> 파일이다. 즉, 이전 스냅샷에도 없고 staging area에도 존재하지 않는 파일들은 <code class=\"language-text\">untracked</code> 상태이다.</li>\n<li>저장소를 처음 <code class=\"language-text\">clone</code>하고 나면 아직 수정한 파일이 없으므로 모든 파일이 <code class=\"language-text\">unmodified</code> 상태에 있게 된다.</li>\n</ul>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/git/git_pro_summary_2/git_file_states.png\" alt=\"Git file states\">\n    <figcaption>Git 파일 상태</figcaption>\n</figure>\n<ul>\n<li>마지막 커밋 이후 아직 아무런 수정도 하지 않은 상태에서 어떤 파일을 수정하게 되면 Git은 수정된 파일을 <code class=\"language-text\">modified</code>로 인식한다. 이 때 실제 커밋을 하기 위해선 이 수정한 파일을 staging area에 올려 <code class=\"language-text\">staged</code> 상태로 만들고, 커밋 명령을 통해 staging area에 있는 파일들을 커밋한다. Git을 사용하면 이러한 라이프 사이클을 계속해서 반복한다.</li>\n</ul>\n<figure>\n    <img src=\"https://git-scm.com/book/en/v2/images/lifecycle.png\" alt=\"The lifecycle of the status of your files\">\n    <figcaption>https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control</figcaption>\n</figure>","frontmatter":{"title":"Git Pro 2nd Edition 요약 Part2","date":"August 28, 2020","category":"git"}}},"pageContext":{"slug":"/git/git-pro-summary-2/","previous":{"fields":{"slug":"/git/git-pro-summary-1/"},"frontmatter":{"title":"Git Pro 2nd Edition 요약 Part1"}},"next":{"fields":{"slug":"/web/how-browsers-work-2/"},"frontmatter":{"title":"브라우저는 어떻게 동작하는가? Part2"}}}},"staticQueryHashes":[]}