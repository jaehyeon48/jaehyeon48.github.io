{"componentChunkName":"component---src-templates-blog-post-js","path":"/web/how_browsers_work_1/","result":{"data":{"site":{"siteMetadata":{"title":"Jaehyeon's Dev Blog","author":"Jaehyeon Kim","siteUrl":"https://jaehyeon48.github.io","comment":{"disqusShortName":"","utterances":"jaehyeon48/blog-comments"}}},"markdownRemark":{"id":"7f9f63eb-1634-59d9-9182-52548872ca37","excerpt":"2편 브라우저의 주요 구성 요소 유저 인터페이스: 주소창, 북마크바, 앞/뒤로 가기 버튼 등 사이트 화면이 나오는 곳을 제외한 부분. 브라우저 엔진: UI와 렌더링 엔진을 제어. 렌더링 엔진: 요청한 내용(content)을 보여주는 역할을 함. 예를 들어, 요청한 내용이 HTML이라면 HTML(과 CSS)를 파싱하여 화면에 렌더링함. 네트워크: HTTP 통신과 같은 네트워크 요청을 처리. UI…","html":"<p><a href=\"../how_browsers_work_2\">2편</a></p>\n<hr class=\"custom-hr\">\n<h2 id=\"브라우저의-주요-구성-요소\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"브라우저의 주요 구성 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>브라우저의 주요 구성 요소</h2>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/web/how_browsers_work/browser_components.png\" alt=\"Browser components\">\n    <figcaption>https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/</figcaption>\n</figure>\n<ol>\n<li><strong>유저 인터페이스</strong>: 주소창, 북마크바, 앞/뒤로 가기 버튼 등 사이트 화면이 나오는 곳을 제외한 부분.</li>\n<li><strong>브라우저 엔진</strong>: UI와 렌더링 엔진을 제어.</li>\n<li><strong>렌더링 엔진</strong>: 요청한 내용(content)을 보여주는 역할을 함. 예를 들어, 요청한 내용이 HTML이라면 HTML(과 CSS)를 파싱하여 화면에 렌더링함.</li>\n<li><strong>네트워크</strong>: HTTP 통신과 같은 네트워크 요청을 처리.</li>\n<li><strong>UI 백엔드</strong>: 드랍다운 메뉴와 같이 기본적인 위젯을 그림.</li>\n<li><strong>자바스크립트 엔진</strong>: 자바스크립트를 분석하고 실행하는데 사용.</li>\n<li><strong>데이터 저장소</strong>: 쿠키, localStorage, IndexedDB와 같은 데이터를 저장.</li>\n</ol>\n<h2 id=\"브라우저의-여정\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%97%AC%EC%A0%95\" aria-label=\"브라우저의 여정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>브라우저의 여정</h2>\n<p>브라우저 주소창에 <a href=\"https://www.google.com\">www.google.com</a>을 치면 어떤 일이 일어나는지를 살펴보자.</p>\n<h3 id=\"네비게이션\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EB%B9%84%EA%B2%8C%EC%9D%B4%EC%85%98\" aria-label=\"네비게이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>네비게이션</h3>\n<p>우선 첫 번째로 일어나는 일은, 올바른 장소를 찾아가는(navigate) 것이다. 특정 웹 페이지를 찾아간다는 말은 해당 페이지에 대한 데이터(asset)가 어디에 있는지를 찾아낸다는 의미이다.</p>\n<h4 id=\"dns-lookup\" style=\"position:relative;\"><a href=\"#dns-lookup\" aria-label=\"dns lookup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>DNS LOOKUP</h4>\n<p>사람한테 웹 페이지란 google.com과 같은 <strong>도메인 이름</strong>이지만, 컴퓨터는 오직 0과 1밖에 모르기 때문에 도메인 이름 “문자열”을 IP 주소로 변환한다. 이렇게 도메인 이름을 IP주소로 변환하는 과정을 <strong>DNS lookup</strong> 이라고 한다.</p>\n<p><code class=\"language-text\">www.google.com</code> 도메인에 대한 DNS 과정을 간략하게 나타내면 다음과 같다:</p>\n<ol>\n<li>\n<p>우선 해당 도메인의 IP주소에 대한 캐시가 있는지 살펴본다.</p>\n<ol>\n<li>제일 먼저 브라우저 캐시부터 살펴본다.</li>\n<li>브라우저 캐시가 없으면 (시스템 콜을 통해) OS캐시를 살펴본다.</li>\n<li>OS캐시도 없으면 라우터와 통신하여 라우터 캐시를 살펴본다.</li>\n<li>만약 라우터 캐시도 없으면 ISP의 DNS 서버에 있는 ISP 캐시를 살펴본다.</li>\n</ol>\n</li>\n<li>\n<p>만약 캐시를 발견하지 못했다면 DNS resolver에게 요청하여 도메인(URL)에 대한 IP 주소를 얻는다.</p>\n<ol>\n<li>우선 resolver가 DNS root 네임서버 (.) 에게 요청한다.</li>\n<li>root nameserver는 .com, .net과 같은 TLD DNS 네임서버의 주소를 반환한다. www.google.com을 검색하는 경우, .com TLD DNS 네임서버 주소를 반환하게 될 것이다.</li>\n<li>resolver는 이제 TLD 네임서버에게 요청을 보낸다.</li>\n<li>TLD 네임서버는 authoritative 네임서버(도메인 네임서버)의 주소를 반환한다. www.google.com의 경우, google.com 네임서버의 주소를 반환하게 될 것이다.</li>\n<li>resolver는 마지막으로 authoritative 네임서버에게 요청을 보낸다.</li>\n<li>authoritative 네임서버는 요청받은 URL의 IP주소를 반환한다.</li>\n</ol>\n</li>\n</ol>\n<p>실제로 각 레이어마다 캐시를 사용하기 때문에 이 과정은 매우 빠르게 일어난다.</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/web/how_browsers_work/dns_lookup.png\" alt=\"dns_lookup\" width=\"600px\">\n    <figcaption>https://www.cloudflare.com/learning/dns/what-is-dns/</figcaption>\n</figure>\n<h4 id=\"tcp-handshake\" style=\"position:relative;\"><a href=\"#tcp-handshake\" aria-label=\"tcp handshake permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>TCP HANDSHAKE</h4>\n<p>이제 IP 주소를 알아냈으니, 브라우저는 IP 주소에 해당하는 서버와 통신할 준비를 한다. 이 때 서버와 연결을 하기위해 사용되는 프로토콜에는 여러 종류가 있지만, HTTP 요청에는 주로 TCP가 사용된다.</p>\n<p>브라우저는 TCP 3-way handshake를 통해 IP 주소에 해당하는 서버와 연결을 한다. 대략적인 과정은 다음과 같다:</p>\n<ol>\n<li>클라이언트(브라우저)가 서버에게 새로운 연결을 요청하기 위해 SYN 패킷을 보낸다.</li>\n<li>서버가 새로운 연결을 할 수 있는 상태라면, SYN/ACK 패킷을 클라이언트로 보내 SYN 패킷에 대한 응답을 한다.</li>\n<li>마지막으로, 클라이언트는 SYN/ACK에 대한 응답으로 ACK 패킷을 서버로 보낸다.</li>\n</ol>\n<p>이제 브라우저와 서버끼리 데이터를 주고받을 준비를 마쳤다 (아마도?).</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/web/how_browsers_work/three_way_handshake.png\" alt=\"three_way_handshake\" width=\"600px\">\n</figure>\n<h4 id=\"tls-negotiation\" style=\"position:relative;\"><a href=\"#tls-negotiation\" aria-label=\"tls negotiation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>TLS NEGOTIATION</h4>\n<p>HTTPS 프로토콜을 사용하는 경우, 서버와 통신을 하기위해 한 가지 과정을 더 거쳐야 한다. HTTPS는 TLS(SSL)을 사용하여 일반적인 HTTP 요청/응답을 암화하 하는 프로토콜이다.</p>\n<p>HTTPS를 사용하여 안전한 통신을 하기 위해선 또 다른 handshake 과정을 수행해야만 한다. TLS handshake (TLS negotiation) 과정에선 다음의 일들이 발생한다:</p>\n<ul>\n<li>어떤 TLS 버전(TLS 1.0, 1.2, 1.3, etc.)를 사용할 것인가를 결정</li>\n<li>어떤 <a href=\"https://en.wikipedia.org/wiki/Cipher_suite#:~:text=A%20cipher%20suite%20is%20a,help%20secure%20a%20network%20connection.&#x26;text=The%20key%20exchange%20algorithm%20is,encrypt%20the%20data%20being%20sent.\">cipher suite</a>를 사용할 것인가를 결정</li>\n<li>서버의 공개키(public key)와 SSL certificate의 전자 서명을 통해 서버의 신원을 인증</li>\n<li>handshake 이후 <a href=\"https://www.cryptomathic.com/news-events/blog/symmetric-key-encryption-why-where-and-how-its-used-in-banking#:~:text=Symmetric%20encryption%20is%20a%20type,encrypt%20and%20decrypt%20electronic%20information.&#x26;text=This%20encryption%20method%20differs%20from,to%20encrypt%20and%20decrypt%20messages.\">symmetric encryption</a>를 사용하기 위해 세션키를 생성</li>\n</ul>\n<p>TLS handshake가 일어나는 과정은 추후에 따로 살펴보자.</p>\n<h3 id=\"fetching\" style=\"position:relative;\"><a href=\"#fetching\" aria-label=\"fetching permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>Fetching</h3>\n<p>이제 TCP 연결도 마쳤고 (HTTPS의 경우) TLS 설정도 마쳤으니 브라우저는 HTTP 프로토콜을 이용하여 서버로부터 HTML 파일을 받는다.</p>\n<h4 id=\"http-request\" style=\"position:relative;\"><a href=\"#http-request\" aria-label=\"http request permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>HTTP REQUEST</h4>\n<p>페이지를 가져오기 위해 <a href=\"https://stackoverflow.com/questions/1077412/what-is-an-idempotent-operation\">idempotent</a> (간단히 말하자면, 같은 입력에 대해선 항상 같은 출력이 나온다는 뜻)한 요청을 보낸다. 이 때 HTTP의 <code class=\"language-text\">GET</code> 메소드를 사용한다.</p>\n<p>HTTP <code class=\"language-text\">GET</code> 메소드를 간단히 말하자면, 주어진 <a href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier\">URI</a>가 가리키는 서버의 데이터를 요청하는 것이라고 할 수 있다.</p>\n<p>HTTP <code class=\"language-text\">GET</code>을 사용하면 다음과 같이 서버에게 <code class=\"language-text\">HTTP REQUEST</code>를 보낸다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET / HTTP/2\nHost: www.google.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-GB,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\nTE: Trailers</code></pre></div>\n<p>이러한 요청을 받은 서버는 요청과 관련된 헤더와 데이터를 다음과 같이 <code class=\"language-text\">HTTP RESPONSE</code> 형식으로 응답한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/2 200 OK\ndate: Sun, 18 Jul 2021 00:26:11 GMT\nexpires: -1\ncache-control: private, max-age=0\ncontent-type: text/html; charset=UTF-8\nstrict-transport-security: max-age=31536000\ncontent-encoding: br\nserver: gws\ncontent-length: 37418\nx-xss-protection: 0\nx-frame-options: SAMEORIGIN\ndomain=www.google.com\npriority=high\nX-Firefox-Spdy: h2</code></pre></div>\n<p>이 때 HTML 문서의 소스코드는 response의 body에 포함되어 전달된다.</p>\n<p>더 많은 HTTP 메소드에 대해선 <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-8.1.3\">RFC7231 Section 8.1.3</a>을 참고하길 바란다.</p>\n<p>> 2부에 계속…</p>","frontmatter":{"title":"브라우저는 어떻게 동작하는가? Part1","date":"August 29, 2020","category":"web"}}},"pageContext":{"slug":"/web/how_browsers_work_1/","previous":{"fields":{"slug":"/web/how_browsers_work_2/"},"frontmatter":{"title":"브라우저는 어떻게 동작하는가? Part2"}},"next":{"fields":{"slug":"/javascript/browser_event_loop/"},"frontmatter":{"title":"브라우저 환경에서의 이벤트 루프"}}}},"staticQueryHashes":[]}