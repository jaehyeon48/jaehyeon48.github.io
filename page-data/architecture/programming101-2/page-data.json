{"componentChunkName":"component---src-templates-blog-post-js","path":"/architecture/programming101-2/","result":{"data":{"site":{"siteMetadata":{"title":"Jaehyeon's Dev Blog","author":"Jaehyeon Kim","siteUrl":"https://jaehyeon48.github.io","comment":{"disqusShortName":"","utterances":"jaehyeon48/blog-comments"}}},"markdownRemark":{"id":"db7e0d19-e438-57bb-bbf6-9123108258ae","excerpt":"…","html":"<p>이 글은 <a href=\"https://www.youtube.com/watch?v=kRdML08R2Yo&#x26;list=PLwouWTPuIjUg0dmHoxgqNXyx3Acy7BNCz\">최범균님의 프로그래밍 초식 시리즈</a>을 요약한 글입니다.</p>\n<hr class=\"custom-hr\">\n<h2 id=\"초짜에서-중수가-되려면\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EC%A7%9C%EC%97%90%EC%84%9C-%EC%A4%91%EC%88%98%EA%B0%80-%EB%90%98%EB%A0%A4%EB%A9%B4\" aria-label=\"초짜에서 중수가 되려면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>초짜에서 중수가 되려면..?</h2>\n<p>소프트웨어를 만들려면 언어, 프레임워크, 라이브러리 등 구현 기술, 도구를 (당연히) 익혀야 한다. 하지만 구현 기술 조금 익혔다고 해서 중수 혹은 고수가 되는 것은 아니다. 구현 기술은 단지 여러 기본기 중 하나에 불과하다.</p>\n<p>실제로 중수 혹은 고수가 되기 위해선 많은 것을 익혀야 하는데, 여기서는 그중 하나인 “나누기”에 대해서 살펴보자.</p>\n<h2 id=\"초짜-특\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EC%A7%9C-%ED%8A%B9\" aria-label=\"초짜 특 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>초짜 특</h2>\n<p>프로그래밍 초보들이 만드는 코드의 특징 중 하나는 시간이 지날수록 함수/메서드/클래스 등이 점점 비대해진다는 점이다.</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/architecture/programming101/newbie.png\" alt=\"프로그래밍 뉴비 특징\">\n    <figcaption>https://www.youtube.com/watch?v=NaeXpswLvxk&amp;list=PLwouWTPuIjUg0dmHoxgqNXyx3Acy7BNCz&amp;index=2</figcaption>\n</figure>\n<p>하지만 이런식으로 함수/메서드/클래스가 너무 커지게 되면 프로그램 분석이 어려워지기 시작한다. 즉, 추후에 코드를 수정하고 리팩토링하기 힘들어진다는 뜻이다. 흔한 예로는 다음이 있다:</p>\n<ul>\n<li>함수 내에서 <code class=\"language-text\">if-else</code>문 혹은 <code class=\"language-text\">if</code>문의 중첩이 (복잡하게) 많아진다.</li>\n<li>변수의 의미가 중간에 바뀐다.</li>\n<li>한 함수 내에서 중복이 발생하는 경우가 생긴다.</li>\n</ul>\n<h2 id=\"필요한-기술-나누기\" style=\"position:relative;\"><a href=\"#%ED%95%84%EC%9A%94%ED%95%9C-%EA%B8%B0%EC%88%A0-%EB%82%98%EB%88%84%EA%B8%B0\" aria-label=\"필요한 기술 나누기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>필요한 기술: 나누기</h2>\n<p>최소한 프로그래밍 중급자 이상으로 가기 위해 필요한 기술 중 하나가 바로 코드를 의미가 있는 단위로 나누는 기술이다.</p>\n<p>나눈다는 것은 곧 기능을 분해하고, 분리한다는 의미이다. 일반적으로, 어떤 하나의 기능은 여러개의 더 작은 하위 기능으로 구성된다:</p>\n<figure>\n    <img src=\"https://cdn.jsdelivr.net/gh/jaehyeon48/jaehyeon48.github.io@master/assets/images/architecture/programming101/divide_logic.png\" alt=\"기능 나누기\">\n    <figcaption>기능 나누기</figcaption>\n</figure>\n<p>이렇게 나눠진 기능들은 별도의 메서드나 클래스로 분리되어 각각 알맞게 흩어지게 된다.</p>\n<p>로직을 나눈다는 것은 결국 역할 혹은 책임을 도출하는 것이다. 함수 혹은 클래스 등을 분리한다는 것은 역할 혹은 책임에 따라 구성요소를 도출하는 과정에 가깝다.</p>\n<h2 id=\"그럼-어떻게-나눌까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%82%98%EB%88%8C%EA%B9%8C\" aria-label=\"그럼 어떻게 나눌까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>그럼 어떻게 나눌까?</h2>\n<p>사실 <strong>“어떤 기준으로 나눠야 하나?”</strong> 에 대한 정답은 없다 (참 어려운 문제다..!). 하지만 일반적으로, 기능에서 <strong>의미 있는 하위 기능 단위</strong>로 나누는 시도를 했을 때 결과가 좋았던 것 같다.</p>\n<h2 id=\"나누기-결과\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%88%84%EA%B8%B0-%EA%B2%B0%EA%B3%BC\" aria-label=\"나누기 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>나누기 결과</h2>\n<h3 id=\"나누기를-안하게-되면\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%88%84%EA%B8%B0%EB%A5%BC-%EC%95%88%ED%95%98%EA%B2%8C-%EB%90%98%EB%A9%B4\" aria-label=\"나누기를 안하게 되면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>나누기를 안하게 되면</h3>\n<p>나누기를 안 하게 되면 (일반적으로) 하나의 함수 내에 봐야 할 코드가 존재하므로 코드의 순서대로 구현을 이해하는 것이 가능하다. 즉, 코드에 표시된 게 거의 실행 순서와 일치하므로 코드의 순서를 따라가면서 구현을 이해하는 것이 가능하다.</p>\n<p>하지만 코드의 양이 많아질수록 복잡해져서 점점 이해하기 어려워진다. 사람의 머리로 한 번에 이해할 수 있는 범위는 한정되어 있으니까…</p>\n<p>또한 내부적으로 복잡해지다 보니 코드를 변경하는 것도 어려워진다.</p>\n<h3 id=\"너무-잘게-나누게-되면\" style=\"position:relative;\"><a href=\"#%EB%84%88%EB%AC%B4-%EC%9E%98%EA%B2%8C-%EB%82%98%EB%88%84%EA%B2%8C-%EB%90%98%EB%A9%B4\" aria-label=\"너무 잘게 나누게 되면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>너무 잘게 나누게 되면</h3>\n<p>반대로, 너무 잘게 나누게 되면 오히려 구조적으로 복잡해지기 때문에 실행 흐름을 이해하기 어려워질 수 있다. 또한, 코드를 수정할 때 수정할 대상이 많아져서 변경이 어려워지는 일이 발생할 수도 있다.</p>\n<h3 id=\"적절하게-잘-나누게-되면\" style=\"position:relative;\"><a href=\"#%EC%A0%81%EC%A0%88%ED%95%98%EA%B2%8C-%EC%9E%98-%EB%82%98%EB%88%84%EA%B2%8C-%EB%90%98%EB%A9%B4\" aria-label=\"적절하게 잘 나누게 되면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"link\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"></path></svg></a>적절하게 잘 나누게 되면</h3>\n<p>적절한 규모로 잘 나누게 되면 (구조적인 복잡도는 증가하지만) 상위 수준에서 코드의 전체적인 흐름을 이해하기 쉬워진다. 또한, 잘 나누게 되면 코드를 변경할 위치가 한 곳으로 집중될 가능성이 높아지므로 나누기 전보다 코드를 수정하기 쉬워질 가능성이 높아진다.</p>\n<br />\n<p>따라서 결론적으로 코드를 너무 적게 혹은 너무 많이도 말고, <strong>적절히, 잘</strong> 나누는 것이 중요하다 (물론 말은 참 쉽다 ^^). 특히 초짜라면 평소에 코드 나누기 연습을 해야 몸에 체득이 되어 실전에서 저절로 나오게 된다.</p>\n<p>연차가 오래 쌓인 개발자들도 기본적인 나누기를 못하는 경우가 많다고 하니.. 나누는 것을 습관화할 필요가 있을 것 같다.</p>","frontmatter":{"title":"프로그래밍 초식 요약 - 나누기","date":"December 08, 2021","category":"architecture"}}},"pageContext":{"slug":"/architecture/programming101-2/","previous":{"fields":{"slug":"/architecture/programming101-3/"},"frontmatter":{"title":"프로그래밍 초식 요약 - What? How?"}},"next":{"fields":{"slug":"/architecture/refactoring_summary_2/"},"frontmatter":{"title":"리팩토링 2판 요약 정리 Ch.2"}}}},"staticQueryHashes":[]}